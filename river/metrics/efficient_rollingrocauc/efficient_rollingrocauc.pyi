from collections.abc import Sequence
from typing import Any

class EfficientRollingROCAUC:
    def __cinit__(self, positiveLabel: int, windowSize: int) -> None: ...
    def __dealloc__(self) -> None: ...
    def update(self, label: bool, score: bool | float | dict[bool, float]) -> None: ...
    def revert(self, label: bool, score: bool | float | dict[bool, float]) -> None: ...
    def get(self) -> float: ...
    def __getnewargs_ex__(self) -> tuple[tuple[int, int], dict[str, Any]]: ...
    def __getstate__(self) -> tuple[Sequence[int], Sequence[float]]: ...
    def __setstate__(self, state: tuple[Sequence[int], Sequence[float]]) -> None: ...
